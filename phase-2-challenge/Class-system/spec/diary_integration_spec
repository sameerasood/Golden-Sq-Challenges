require "diary"
require "diaryentry_classsystem"

RSpec.describe "integration" do
  it "adds an entry" do
    diary = Diary.new
    diary_entry = DiaryEntry.new("my_title", "my_contents")
    diary.add(diary_entry)
    expect(diary.all).to eq [diary_entry]
  end

  it "adds two entries" do
    diary = Diary.new
    diary_entry = DiaryEntry.new("my_title", "my_contents")
    diary_entry_2 = DiaryEntry.new("my_title_2", "my_contents_2")
    diary.add(diary_entry)
    diary.add(diary_entry_2)
    expect(diary.all).to eq [diary_entry, diary_entry_2]
  end

  it "gives us total word count of all the enteries" do
    diary = Diary.new
    diary_entry_1 = DiaryEntry.new("my_title", "one two three four five six")
    diary_entry_2 = DiaryEntry.new("my_title 2", "seven eight nine ten")
    diary.add(diary_entry_1)
    diary.add(diary_entry_2)
    expect(diary_entry.count_words).to eq 10
  end
  
  it "gives us the word count of 1 entry" do
    diary = Diary.new
    diary_entry = DiaryEntry.new("my_title", "one two three four five six")
    diary.add(diary_entry)
    expect(diary_entry.count_words).to eq 6
  end

  it "gives us the word count of 2 entries" do
    diary = Diary.new
    diary_entry = DiaryEntry.new("my_title", "one two three four five six")
    diary_entry_2 = DiaryEntry.new("my_title_2", "hello how are you")
    diary.add(diary_entry)
    diary.add(diary_entry_2)
    expect(diary_entry.count_words).to eq 6
    expect(diary_entry_2.count_words).to eq 4
  end

  it "returns 0 if no diary entries added" do
    diary = Diary.new
    expect(diary.count_words).to eq 0
  end
  
  it "calculates the reading time for all the entries" do
    diary = Diary.new
    diary_entry = DiaryEntry.new("my_title", "one two three four five six seven")
    diary_entry_2 = DiaryEntry.new("my_title_2", "hello how are you")
    diary.add(diary_entry)
    diary.add(diary_entry_2)
    expect(diary.readingtime(2)).to eq 6
  end

  it "raises an error message if wpm is 0" do
    diary = Diary.new
    diary_entry = DiaryEntry.new("my_title", "one two three four five six seven")
    diary_entry_2 = DiaryEntry.new("my_title_2", "hello how are you")
    diary.add(diary_entry)
    diary.add(diary_entry_2)
    expect{diary.reading_time(0)}.to raise_error "WPM must not be zero"
  end

  it "returns the entry that is closest to, but not over,the minutes given my the user" do
    diary = Diary.new 
    diary_entry = DiaryEntry.new("my_title", "one two three four five six")
    diary.add(diary_entry)
    expect(diary.find_best_entry_for_reading_time(2,3)).to eq diary_entry
  end

  it "returns nil if the content length is longer than the minutes to read" do
    diary = Diary.new 
    diary_entry = DiaryEntry.new("my_title", "one two three four five six")
    diary.add(diary_entry)
    expect(diary.find_best_entry_for_reading_time(2,1)).to eq nil
  end
end